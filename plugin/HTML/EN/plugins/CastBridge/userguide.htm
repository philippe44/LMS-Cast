<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Cascadia Mono";
	panose-1:2 11 6 9 2 0 0 2 0 4;}
@font-face
	{font-family:"Liberation Sans";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	text-autospace:ideograph-other;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:#00000A;}
h1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	text-autospace:ideograph-other;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:#00000A;
	font-weight:normal;}
h2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	text-autospace:ideograph-other;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:#00000A;
	font-weight:normal;}
h5
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	text-autospace:ideograph-other;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:#00000A;
	font-weight:normal;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:36.0pt;
	text-autospace:ideograph-other;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	color:#00000A;}
span.InternetLink
	{mso-style-name:"Internet Link";
	color:blue;
	text-decoration:underline;}
.MsoChpDefault
	{font-size:10.0pt;
	font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	text-autospace:ideograph-other;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:57.0pt 48.55pt 70.85pt 52.5pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=FR link=blue vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=center style='text-align:center'><a
name="__RefHeading__1023_962334235"></a><b><span lang=EN-GB style='font-size:
15.0pt;color:black'>Squeeze2Cast – Chromecast bridge - User Guide</span></b></p>

<h1 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
21.6pt;text-indent:-21.6pt;page-break-after:avoid'><b><span lang=EN-GB
style='font-size:14.0pt;font-family:"Liberation Sans"'>&nbsp;</span></b></h1>

<h1 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
21.6pt;text-indent:-21.6pt;page-break-after:avoid'><b><span lang=EN-GB
style='font-size:14.0pt;font-family:"Liberation Sans"'>1</span></b><b><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></b><b><u><span lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>Introduction</span></u></b></h1>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>1.1</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>What Is It?</span></h2>

<p class=MsoNormal><span lang=EN-GB style='color:black'>This program
(squeeze2cast – a.k.a sq2c or the bridge) turns ChromeCast (CC) players into
squeezeboxes to they can be used by the Logitech Media Server as regular SB
devices. It automatically scans local network for CC devices and creates an
instance of a modified squeezelite for each one found.</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>It works on any
computer running Windows, macOS (arm and x64), or Linux (x86/64, arm, aarch64,
sparc, mips, ppc), FreeBSD (x64) and Solaris (x64). Most builds have a normal
and a –static version. The –static version removes the dependency with shared
libraries. It’s convenient on some NAS platform that often are not full Linux
systems, but the drawback is that libraries updates to your system will be not
be used.</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>It can be installed,
configured and ran from LMS, but it can also run on another machine on the same
network. In the latter case, configuration must be done semi-manually.</span></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>1.2</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>How it Works</span></h2>

<p class=MsoNormal><span lang=EN-GB style='color:black'>The bridge receives and
forwards commands and audio streams from LMS to CC players. For each track
played by LMS, an ChromeCast command containing metadata (artist, album,
artwork) and format (codec, duration) information is sent to the player and
then audio is forwarded using HTTP. Progress, status, volume changes and as
much as possible local actions (play/pause/stop) are retrieved and forward to
LMS. When starting to play, LMS will own the device but will try to get
feedback on changes/actions taken locally (see section below on local
commands). This also means that the bridge sends keep-alive packets regularly.
Once stopped, the connection will be kept for 30s and then the player will be
fully released.</span></p>

<p class=MsoNormal><span lang=EN-US>There are two modes of operation: <b>pass-through</b>
and <b>full processing</b> (see &lt;mode&gt; parameter description for detailed
configuration). In both modes, the bridge queries audio capabilities from the
player so that it can inform LMS of which format are accepted. The actual list
of supported codecs can be limited using &lt;codec&gt;. There is a “null” codec
which replaces all audio by silent mp3 frames to use the CC just as a display</span></p>

<p class=MsoNormal><span lang=EN-US>1.2.1 Pass-through mode</span></p>

<p class=MsoNormal><span lang=EN-US>In this mode, the bridge simply forwards
the coded (mp3, flac …) audio received from LMS to the CC player, without
decoding it. Only very simple alterations are made in case of flac, aac (when
encapsulated in mp4 files) and pcm. It’s the simplest mode, but CC players
might not be able to decode tracks above 96kHZ.</span></p>

<p class=MsoNormal><span lang=EN-US>Except when the source audio from LMS is un-coded
(either because it’s an aif or wav file or because you’ve setup LMS to send
only un-coded audio), replay gain and transition (fading) will not work. </span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>1.2.2 Full processing</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>In this mode, the
bridge decodes the received audio and transforms it into mp3, aac, flac or
pcm/wav/aif before sending it to the CC player. This allows a much more
controlled experience, as only one audio format is used and that format can be
very strictly controlled to be always the same, including sample rate and
sample size. This mode supports pcm (plain, wav and aif), flac, alac, mp3, aac
and ogg (vorbis/opus/flac) tracks.</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>This enables replay
gain and transition (fade in, out, in-out but not cross-fading) on all tracks.
To add cross-fading, tracks must be sent to the CC player as a continuous
stream (webradio) and this is what the “flow” mode extension does. In this
mode, metadata has to be sent independently from the track because the CC does
not see track changes anymore.</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>Recent version of the
bridge have a way to continuously send metadata to players by using their own
“media receiver”.</span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black'>1.2.3 Gapless
consideration</span></p>

<p class=MsoNormal><span lang=EN-GB>CC players normally receive commands to
play track one by one. The bridge detects when current track has stopped and
then requires the next one to LMS. </span></p>

<p class=MsoNormal><span lang=EN-US>Players have an option for playlist that
should provide gapless, but it’s not well documented. </span><span lang=EN-GB>The
only way to have true gapless is to use ‘flow’ mode (see above)</span></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>1.3</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>Configuration</span></h2>

<p class=MsoNormal><span lang=EN-GB>The bridge can run standalone with a few
command lines options to tweak it, or it can take its configuration from an XML
config file. That file does NOT create the players, it just provides
configuration information for when they are detected. There are global
settings, common settings that apply by default to all players and player’s
specific settings that override the common ones.</span></p>

<h1 style='margin-top:24.0pt;margin-right:0cm;margin-bottom:10.0pt;margin-left:
21.55pt;text-indent:-21.55pt;page-break-after:avoid'><a
name="__RefHeading__524_1289253441"></a><b><span lang=EN-GB style='font-size:
14.0pt;font-family:"Liberation Sans"'>2&nbsp;&nbsp;Using ChromeCast<u> bridge</u></span></b></h1>

<p class=MsoNormal><span lang=EN-GB style='color:black'>In LMS, the bridge is
automatically available as third party plugins and all you have to do is
install it and go in its settings to select the “binary helper” (the
application doing the actual work). If you want to try the development version,
add the following repository to LMS: </span><span class=InternetLink><span
lang=EN-US>http://downloads.sourceforge.net/project/lms-plugins-philippe44/dev/repo-sf.xml.</span></span></p>

<p class=MsoNormal><span lang=EN-US>Once the plugin is installed, just enable
the binary helper, wait for about 30 seconds and refresh your page, the list of
discovered players will be displayed. There is a “generate” button that is
really optional, if you want to scan and re-create a config file <b>now.</b>
From there, you can tweak all settings, common and player’s specific. Just use
the info bubble for basic help. Players are added to the configuration file as
they are discovered, unless you disable the “autosave” option.</span></p>

<p class=MsoNormal><span lang=EN-US>You can also just run the
squeeze2cast-xxx-yyy application wherever you want on your network, it does not
have to coexist with LMS on the same machine. If you need a config file, you’ll
have to edit it manually, but it can still be generated, see command line
options. Type “exit” when the program runs to terminate it (it also responds to
kill signal).</span></p>

<p class=MsoNormal><u><span lang=EN-GB style='color:black'>README on firewall</span></u><span
lang=EN-GB style='color:black'>: The bridge must be allowed to go through the
firewall of the machine it runs onto. It opens one port per device when
playing. Such ports are random unless &lt;binding&gt; is set. In Windows, set
an entry for binary helper. <b>If you use docker, you must set network to host
mode, the bridge cannot be behind a NAT.</b></span></p>

<p class=MsoNormal><u><span lang=EN-GB style='color:black'>README on volume
management</span></u><span lang=EN-GB style='color:black'>: Chromecast devices
have the notion of “media session” which is a unique session established per
each playback. The Chromecast volume can be controlled either globally, or per
“media session”. These are independent volume levels and the actual volume is
the combination of the two. The solution used by the bridge is to use the
global volume so that a change of volume made from another controller (e.g. The
Android or iOS apps) can be reflected in LMS. In case the volume is too loud
across the LMS range, it is possible to scale it through the “media session”
volume using the parameter &lt;media_volume&gt;</span></p>

<h5 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
0cm;page-break-after:avoid'><a name="__RefHeading__1149_395429088"></a><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>2.1 Setting
up mode of operation</span></h5>

<p class=MsoNormal><span lang=EN-GB style='color:black'>As mentioned above, the
bridge can operate in two very different modes: pass-through and full
processing, set by the &lt;mode&gt; parameters </span><span lang=EN-US>and a
special “null” variant which replaces all audio by silent mp3 frames to use the
CC player just as a display. </span></p>

<p class=MsoNormal style='background:white'><u><span lang=EN-GB
style='color:black'>2.1.1 Pass-through mode</span></u></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>In
pass-through mode, the selection of &lt;codecs&gt; is very important. The
bridge will only let you choose amongst the CC supported codecs: aif, pcm, flc,
ogg, ogs, and mp3. </span></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>Although
the bridge does not decode data, it does a few tweaks for flac, mp4 and
pcm/wav/aif audio tracks. </span></p>

<p class=MsoNormal style='background:white'><b><span lang=EN-GB
style='color:black'>FLAC</span></b><span lang=EN-GB style='color:black'>: When
seeking in a track, LMS does not send a flac header which can cause playback
failure. The parameter &lt;flac_header&gt; let the bridge insert a pseudo flac
header on the fly when it’s missing. When that re-insertion is made, the bridge
also adjust the frame counters so that they always start from 0 (otherwise
players might display an incorrect timestamp)</span></p>

<p class=MsoNormal style='background:white'><b><span lang=EN-GB
style='color:black'>PCM/WAV/AIF: </span></b><span lang=EN-GB style='color:black'>As
audio is already decoded, the bridge can do a bit more tweaking. It applied
replay gain and do fade in, out and in-out even in passthrough mode.</span></p>

<p class=MsoNormal style='background:white'><b><span lang=EN-CA>AAC:</span></b><span
lang=EN-CA> Such codec can be carried inside a mp4 container or as raw adts
frames. The codec name is still “aac” as far as LMS is concerned but it can
send either or. CC players should support both and the bridge simply forwards
audio data. In case this fails (never happened so far) the parameter
&lt;force_aac&gt; can be set to force adts unwrapping to be made by the bridge.</span></p>

<p class=MsoNormal style='background:white'><u><span lang=EN-GB
style='color:black'>2.1.2 Full processing mode</span></u></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>In
full processing mode, the bridge decodes pcm, wav, aif, ogf, flc, alc, mp3,
ogg, ops, ogf and aac audio tracks ((as long as they are set in the
&lt;codecs&gt; parameter), optionally re-encodes them into mp3, aac, flac,
pcm/wav/aif </span></p>

<p class=MsoNormal style='background:white'><span lang=EN-CA>The &lt;codecs&gt;
option is not related any more to what the player actually supports, as the
bridge does the decoding. Similarly, as the &lt;sample_rate&gt; is just an
indication for LMS when to do resampling, just set it to 192000 and let the
bridge do all the resampling/transcoding using the &lt;mode&gt; parameter. You
can still let &lt;sample_rate&gt; to be the actual maximum player rate, but
you’ll likely end with some resampling done in LMS and some done in the Bridge
which might be confusing.</span></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>Here
you have full control up to decide to resample at a fixed sample rate and size
or just use whatever is the received format</span></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>Because
audio is decoded, replay gain will always work as well as fade-in, out and
in-out. If you want cross-fade in addition, the use the “flow” option but then
you <b>must</b> set the sample rate and size as all tracks become a continuous
stream like a webradio.</span></p>

<p class=MsoNormal style='background:white'><span lang=EN-GB style='color:black'>In
flow mode, the bridge purely relies on timing to detect track change. So if LMS
does not provide track’s duration, that will not work which means you can’t
have a password on LMS.</span></p>

<h1 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
21.6pt;text-indent:-21.6pt;page-break-after:avoid'><a
name="__RefHeading__1030_962334235"></a><a name="__RefHeading__1197_939935217"></a><b><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>3</span></b><b><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b><b><u><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>Detailed
Information</span></u></b></h1>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><a
name="__RefHeading__1028_962334235"></a><a name="__DdeLink__595_1289253441"></a><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>3.1 HTTP
server and communication</span></h2>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-GB style='color:
black'>The player grabs the audio data (passthrough or re-encoded) from the
bridge through an HTTP server. One of the main difficulties is that players
usually expect an audio track to be fully and always available on the server,
its length communicated with a parameter named “content-length) and will try to
seek trough it randomly. Obviously, this cannot be the case with the bridge as
LMS does not tell the size of the file (he does not even know it when it
transcodes or seeks) and it is received on the fly. The following applies to
&lt;stream_length&gt; setting:</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>Chunked (-3): </span></b><span
lang=EN-US>This is the default for HTTP 1.1 and is made to handle exactly the
problem of unknown file size. The server sends data by “chunks” and never tells
the full length to the player. </span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>No-Length
(-1): </span></b><span lang=EN-US>It’s perfectly legit for an HTTP server to
never indicate the “content-length” of what it sends and is the default mode
for CC devices</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>If-Known (-2):
</span></b><span lang=EN-US> When sending pcm/wav and aif, as long as we know
the duration, the size can be deduced from the sample rate and size. Whenever
that is possible, then bridge will populate “content-length” with that
calculated value.</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>Estimated (0):
</span></b><span lang=EN-US>Last resort is to always force a “content-length”
through an educated guess, based on bitrate and duration (with comfortable
margin). When no data is available, the maximum 32 bits-integer (2^32-1) will
be used. Note that in flow mode or when streaming live content, it fallbacks to
no-length</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-US>Forced
(&lt;value&gt;):</span></b><span lang=EN-US> As above, but with a user-defined
value that can be as large as 2^63-1. It will always be sent, even in flow or
when streaming live content, so it will limit the duration of these session.</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>If you are using
the UPnP bridge as well, you’ll know it’s a very important option but with CC
devices, there is very little reason to not use the default choice to not send
any content-length. </span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm'><span lang=EN-US>In any case, the
bridge is trying to serve these requests as best as possible by caching the
already received audio. </span></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>3.2</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp; </span><span lang=EN-GB
style='font-size:14.0pt;font-family:"Liberation Sans"'>Using player’s local
commands (remote/buttons)</span></h2>

<p class=MsoNormal><span lang=EN-GB style='color:black'>LMS takes full control
of players and t</span><span lang=EN-GB>o use a registered one independently,
best is to switch it off in LMS. Then whatever happens to the player is not
forwarded to LMS and no LMS command will be sent that would interfere with it.
Only when you switch the player back on from LMS will it be under the control
of LMS.</span></p>

<p class=MsoNormal><span lang=EN-GB>Having to switch an CC player off every
time you want to use it independently from LMS might be inconvenient.
Unfortunately, LMS can send volume commands even to a “stopped” player. To
avoid these “spurious” volume commands, unless LMS plays, set the option
&lt;volume_on_play&gt; to 1. </span><span lang=EN-GB style='color:black'>If you
want to control volume only from the player and ignore all LMS volume commands,
set &lt;volume_on_play&gt; to -1 and LMS will have no influence on the player’s
volume. </span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>Pause and play commands using the player's own controls are forwarded to
LMS so that it synchronizes accordingly. This takes up to 1 second to be taken
into account, so be gentle with fast play/pause toggles. Volume commands are
synchronized as well, so control can be done from LMS or the player. (even if
&lt;volume_on_play&gt; is set to -1, level <u>displayed</u> on LMS will still
be synchronized). This facility may not work well with all players and can be
disabled&nbsp; by setting &lt;volume_feedback&gt; to 0</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>&nbsp;</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>Using player’s control ‘stop’ button does not work well, unless you
first use ‘pause’ then, and only the, ‘stop’. If you press ‘stop’ at first, LMS
will either immediately move to the next track, or resume the current track
sometimes a delay.</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>&nbsp;</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>Using “next” or “previous on the player directly does not work, and
never will as ChromeCast does not allow a player to forward such a command to
its controller.</span><a name="__RefHeading__2026_773093279"></a><a
name="__DdeLink__1712_568257573"></a><a name="__RefHeading__1532_593273442"></a></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>3.3</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp; </span><span lang=EN-GB
style='font-size:14.0pt;font-family:"Liberation Sans"'>Search and discovery </span></h2>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-US>Network is
continuously listened to for player-related events. According to the mDNS-SD
specifications, </span><span lang=EN-GB>players shall advertise themselves when
joining and then every 120 seconds. </span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB>They also shall
send a bye-bye message when leaving. In addition, a search is launched every 30
seconds in case to trigger player’s response. When a player does not advertise
itself for 120 seconds, it will be removed, but you can tweak with &lt;remove_timeout&gt;.</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-US>The mDNS
discovery relies on IP multicast frames and these are sometimes filtered out by
routers when bridging together different pieces of you network (for example
WiFi and ethernet). That explains why, if the bridge runs on a computer
connected to ethernet but all your devices are onWiFi, they cannot be
discovered although your smartphone (on WiFi!) does see them. Refer to your
router specification, including for features like multicast handling and IGMP
snooping.</span></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
0cm;page-break-after:avoid;background:white'><span lang=EN-GB style='font-size:
14.0pt;font-family:"Liberation Sans"'>4 FAQ</span></h2>

<p class=MsoListParagraph style='margin:0cm'><span lang=EN-GB style='color:
black'>There is a detailed log that can be viewed and searched through,
accessible the plugin’s settings (it’s also spit out on screen – stderr – when
the bridge is launched manually)</span></p>

<h2 style='margin-top:12.0pt;page-break-after:avoid;background:white'><b><span
lang=EN-GB style='color:black'>No player  is detected: </span></b><span
lang=EN-GB style='color:black'>make sure you are not behind a NAT, like in a
docker not in “host” mode or in a Virtual Machine or don’t have IGMP snooping
or your router isolating multicast traffic between different network branches.</span></h2>

<h2 style='margin-top:12.0pt;page-break-after:avoid;background:white'><b><span
lang=EN-GB style='color:black'>Playback starts but nothing is heard/no
progress:</span></b><span lang=EN-GB style='color:black'> make sure your
firewall is not blocking incoming HTTP request (see &lt;binding&gt; and network
related options)</span></h2>

<h2 style='margin-top:12.0pt;page-break-after:avoid;background:white'><b><span
lang=EN-GB style='color:black'>Only one track plays: </span></b><span
lang=EN-GB style='color:black'>The player does not handle end-of-stream. Change
&lt;next_uri&gt;value. Try various &lt;stream_length&gt; options</span></h2>

<p class=MsoNormal><b><span lang=EN-GB style='color:black'>I don’t understand
“full processing”: </span></b><span lang=EN-GB style='color:black'>in that
mode, all tracks are decoded by the bridge as if they were about to be played
locally. But the bridge re-encodes them in mp3/aac/flac/wav/aif/pcm before
sending them to the player</span></p>

<p class=MsoNormal><b><span lang=EN-GB style='color:black'>Sure, but what’s the
point: </span></b><span lang=EN-GB style='color:black'>you can send always the
exact same format to your player once you know it works well. In addition, you
have fade in/out/in-out.</span></p>

<p class=MsoNormal><b><span lang=EN-GB style='color:black'>What is that “flow”
thing: </span></b><span lang=EN-GB style='color:black'>think about a broadcast
radio where all tracks are sent in a continuous stream, no interruption. You
have true gapless and cross-fade. There is the possibility to insert, in the
stream, some limited metadata (artist/title/album/artwok) but then must be mp3
or aac. It’s also more brittle as the bridge can only rely on cumulated time to
known when a track boundary ahs been crossed and report to LMS.</span></p>

<p class=MsoNormal style='margin-bottom:20.0pt'><b><span lang=EN-GB
style='color:black'>I want to use roon</span></b><span lang=EN-GB
style='color:black'>: there is a &lt;roon_mode&gt; that helps but there will be
severe limitation as roon does not implement a full LMS command line server. So
no metadata will be displayed and HTTP management will be tricky.</span></p>

<h1 style='margin-top:24.0pt;margin-right:0cm;margin-bottom:10.0pt;margin-left:
21.55pt;text-indent:-21.55pt;page-break-after:avoid'><a
name="__RefHeading__1860_842035336"></a><a name="__RefHeading__592_1289253441"></a><b><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>5</span></b><b><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp; </span></b><b><u><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>Configuring
Squeeze2Cast</span></u></b></h1>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><a
name="__RefHeading__1032_962334235"></a><span lang=EN-GB style='font-size:14.0pt;
font-family:"Liberation Sans"'>5.1 Command line</span></h2>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-s
&lt;ip[:port]&gt;        connect to specified server, otherwise uses
autodiscovery to find server        &lt;server&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-b
&lt;ip|iface[:port]&gt;] network address (or interface name) and port to bind
to                       &lt;binding&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-g
-3|-2|-1|0         HTTP content-length (-3:chunked, -2:if known, -1:none,
0:fixed large)          &lt;stream_length&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-4                   
force aac/adts frames unwrapping from mp4 container                           
&lt;force_aac&gt;  </span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-M
&lt;modelname&gt;        set the squeezelite player model name sent to the
server (default: CastBridge)</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-x
&lt;config file&gt;      read config from file (default is ./config.xml)</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-i
&lt;config file&gt;      discover players, save &lt;config file&gt; and exit</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-I                   
auto save config at every network scan</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-d
&lt;log&gt;=&lt;level&gt;      set logging level </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:70.8pt;text-indent:35.4pt;text-autospace:none'><span lang=EN-US
style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>   logs:
all|slimproto|slimmain|stream|decode|output|main|util|cast</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:70.8pt;text-indent:35.4pt;text-autospace:none'><span lang=EN-US
style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>   level:
error|warn|info|debug|sdebug      </span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-C
[-]&lt;codec&gt;,&lt;codec&gt; list of potential codecs (aac,ogg,ops,ogf,flc,alc,wav,aif,pcm,mp3).
'-' removes codecs from default &lt;codecs&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-c
thru[|pcm|flc[:&lt;q&gt;]|aac[:&lt;r&gt;]|mp3[:&lt;r&gt;]][,r:[-]&lt;rate&gt;][,s:&lt;8:16:24&gt;][,flow]]
transcode mode        &lt;mode&gt;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-f
&lt;logfile&gt;          write debug to logfile</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-p
&lt;pid file&gt;         write PID in file</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-z
                  daemonize</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-Z
                  NOT interactive</span></p>

<p class=MsoNormal style='margin-bottom:0cm;text-autospace:none'><span
lang=EN-US style='font-size:9.5pt;font-family:"Cascadia Mono";color:#A31515'>-k
                  immediate exit on SIGQUIT and SIGTERM</span></p>

<h2 style='margin-top:12.0pt;margin-right:0cm;margin-bottom:6.0pt;margin-left:
28.8pt;text-indent:-28.8pt;page-break-after:avoid;background:white'><span
lang=EN-GB style='font-size:14.0pt;font-family:"Liberation Sans"'>5.1</span><span
lang=EN-GB style='font-size:7.0pt'>&nbsp;</span><span lang=EN-GB
style='font-size:14.0pt;font-family:"Liberation Sans"'>Configuration File</span></h2>

<p class=MsoNormal><a name="__DdeLink__1139_19111252451"></a><span lang=EN-GB
style='color:black'>There are 3 parts in a configuration file: system
parameters, &lt;common&gt; parameters that apply by default to all CC players
and, for each CC player discovered, a &lt;device&gt; section. When a parameter
is set in an CC player &lt;device&gt; section, it takes precedence over the
same parameter in the &lt;common&gt; section. </span></p>

<p class=MsoNormal style='margin-bottom:0cm'><b><span lang=EN-GB
style='font-size:11.0pt;color:black'>&lt;?xml version=&quot;1.0&quot;?&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;squeeze2cast&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Global
options</span></i></p>

<p class=MsoNormal><b><span lang=EN-US style='font-size:11.0pt;color:black'>&lt;binding
&gt;ip|iface:[port] | ?&lt;/binding&gt; </span></b><i><span lang=EN-US
style='font-size:11.0pt;color:black'>default = ?</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>(ip|iface
= IP address or interface name, port = port number) for the CC operations
(useful for a computer with multiple Ethernet interfaces, or to assign a
special port number . If only IP address or interface name is set, a randomly
available port will be selected. If only a port is specified, then the default
Ethernet interface is used.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Use
? for auto selection</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;<b>&lt;slimproto_stream_port&gt;[port]&lt;/slimproto_stream_port&gt;</b></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>N/A.</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;<b>&lt;log_limit&gt;[-1
| value]&lt;/log_limit&gt; </b><i>default = -1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Sets
the maximum size (in MB) of a logfile. Set to -1 for unlimited</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;<b>&lt;slimproto_log&gt;[error
| warn | info | debug | sdebug]&lt;/slimproto_log&gt;</b></span></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;stream_log&gt;[error
| warn | info | debug | sdebug]&lt;/stream_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;output_log&gt;[error
| warn | info | debug | sdebug]&lt;/output_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;decode_log&gt;[error
| warn | info | debug | sdebug]&lt;/decode_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;web_log&gt;[error
| warn | info | debug | sdebug]&lt;/web_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;web_log&gt;[error
| warn | info | debug | sdebug]&lt;/web_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;cast_log&gt;[error
| warn | info | debug | sdebug]&lt;/cast_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;util_log&gt;[error
| warn | info | debug | sdebug]&lt;/util_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;main_log&gt;[error
| warn | info | debug | sdebug]&lt;/main_log&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;slimmain_log&gt;[error
| warn | info | debug | sdebug]&lt;/slimmain_log&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Level
of debugging for each sub-item of the bridge.&nbsp; Leave these at info in the
current version.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>These
can be overridden in the command line with the -d option.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB>&nbsp;</span></i><b><span lang=EN-GB
style='font-size:11.0pt;color:black'>&lt;common&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>All
items in this sub-section set the default behaviour for all players. Any option
can be repeated in the &lt;device&gt; section of a given player to override the
&lt;common&gt; option.</span></i></p>

<p class=MsoNormal><span lang=EN-US style='font-size:11.0pt;color:black'>&nbsp;&nbsp;</span><b><span
style='font-size:11.0pt'>&lt;server&gt;[ip[:port] | ?]&lt;/server&gt; </span></b><i><span
style='font-size:11.0pt'>default = ?</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>ip
= IP address or network name, port = port number (usually 3483) of your LMS
server.&nbsp; </span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Use
? for auto-discovery</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>This
can be overridden in the command line with the -s option.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;enabled&gt;[0
| 1]&lt;/enabled&gt; </span></b><i><span lang=EN-GB style='font-size:11.0pt;
color:black'>default = 1</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>‘1’
to automatically add any discovered Chromecast player to LMS players, even if
there is no &lt;device&gt; section referring to it. '0' to prevent this.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;remove_timeout&gt;[-1
| 0 | value]&lt;/remove_timeout&gt; </span></b><i><span lang=EN-GB
style='font-size:11.0pt;color:black'>default = 0</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Player’s
discovery is managed using mDNS protocol, which means that a player sends
regular keep-alive messages and a bye when disconnecting. Some faulty mDNS
stack implementations (e.g. Riva) do not always send keep-alive messages, so
the bridge is disconnecting them regularly. As a workaround, a timer can be set
so that the bridge does not immediately remove the player from LMS when missing
a keep-alive, waiting for it to reconnect</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>-1:
never remove player from LMS</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>0:
remove player when keep-alive is missed or when bye message is received</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;value&gt;:
remove player &lt;value&gt; seconds after missing keep-alive</span></i></p>

<p class=MsoNormal><b><span style='font-size:11.0pt;color:black'>&lt;roon_mode&gt;[0
| 1]&lt;/roon_mode&gt; </span></b><i><span style='font-size:11.0pt;color:black'>default
= 0</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Set
to ‘1’ to if you intend to use this player from a Roon server.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;streambuf_size&gt;[value
&gt; 500000]&lt;/streambuf_size&gt;</span></b><span lang=EN-GB
style='font-size:11.0pt;color:black'> <i>default = 524288</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Size
of the internal memory buffer used to store audio data sent by LMS. Any value
above 512k is fine. If your network is slow you may need to increase it.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;output_size&gt;<a
name="__DdeLink__1856_1756514966">[value &gt; 2000000]</a>&lt;/output_size&gt; </span></b><i><span
lang=EN-GB style='font-size:11.0pt;color:black'>default = 4194304</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Size
of the decoded sample buffer. The size of this buffer determines how much
cross-fading can be done, it must 110% of the cross-fading duration * sample
rate * 8 bytes</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;<b>volume_on_play&gt;[-1
| 0 | 1]&lt;/volume_on_play&gt;</b> <i>default =1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>0:
all LMS volume commands are immediately sent to the device</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>1:
volume commands are only sent when the device is playing under LMS control</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>-1:
all volume commands are ignored</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;<b>media_volume&gt;[-0..100]&lt;media_volume
&gt;</b> <i>default =50</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Global
scaling factor to device volume (using media session volume)</span></i></p>

<p class=MsoNormal><b><span lang=EN-US style='font-size:11.0pt;color:black'>&lt;codecs&gt;[codec1,
codec2, …]&lt;/codecs&gt;</span></b><span lang=EN-US style='font-size:11.0pt;
color:black'> <i>default = aac,ogg,ops,ogf,flc,wav,aif,pcm,mp3</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>The
comma separated list of codecs that will be reported to LMS. If a track is
encoded in a non-supported format, LMS will apply transcoding rules. The codecs
are treated in priority preference order, so if, say, pcm is first, it will be
the chosen codec if the source can be made available in that codec. In
passthrough mode and to date only ogf, flc,pcm,aif,mp3,ogg,ops and aac (with
limitations) are supported.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>In
full processing mode the codecs can be flac,alc,mp3,aif,wav,pcm,ogg,ops,ogf and
aac. The bridge will then do the decoding of the audio and the process it
according to &lt;mode&gt;</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>When
set in device-specific section, every codec can be predicated with + or -, in
which case the codec is added to or remove from the default codec list. <u>Note
that a single codec with + or –make the whole list handled as a difference to
the default list</u></span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;</span></i><b><span
lang=EN-US style='font-size:11.0pt'>&lt;next_uri&gt;[0 | 2]&lt;/next_uri&gt; </span></b><i><span
lang=EN-GB style='font-size:11.0pt;color:black'>default = 0</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>In
normal mode, the bridge requests the next track as soon as the current one has
been fully sent to the CC player and buffers as much as possible (the next
track will only start to be sent when the player has finished playing the
current one. Some CC implementations have a faulty HTTP stack and it’s better
to use “underrun” where the bridges wait for the current track to stop before
requesting the next one to LMS.</span></i></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span><b><span lang=EN-US
style='font-size:11.0pt;color:black'>&lt;mode&gt;[thru|null|pcm|flc[:&lt;q&gt;]|mp3[:&lt;r&gt;]][,r:[-]&lt;rate&gt;][,s:&lt;8:16:24&gt;][,flow]&lt;/mode&gt;</span></b><span
lang=EN-US style='font-size:11.0pt;color:black'> <i>default = thru</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>The
first parameter must be either thru, pcm, flc or mp3 is mandatory and sets the
processing mode.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“thru”:
simple passthru mode, audio data is simply forwarded to the player, except for
flac header insertion and sample resizing when receiving pcm audio</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“null”:
replaces all audio by 64Kbps mp3 silent frames. This can be used to turn the CC
into a metadata display-only device</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“pcm”:
audio is decoded (&lt;codecs&gt; must amongst ogf, flc, alc, aif, wav, pcm,
mp3, ogg, ops and aac) and then sent in pcm format to the player. Use “r:”,
“s:” to tweak what is sent</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“flc”:
audio is decoded, then re-encoded into flac. Use “flc:&lt;q&gt;”to set
compression level from 0 to 9 (default = 0, saves a lot of CPU)</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“mp3”:
audio is decoded, then re-encoded into mp3. Use “mp3:&lt;r&gt;” to set bitrate
(max 320)</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;“r:[-]&lt;rate&gt;”:
set the sample rate used in full processing mode. Use ‘-‘ to set the maximum
sample rate allowed, any value above this will cause down-sampling. If “r:” is
not set, the original sample rate will be preserve, unless flow is used</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;“s:&lt;8,16,24&gt;”:
set the sample size used in full processing mode. If not specified, then
original sample size will be preserve, unless flow is used</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>“flow”:
activates flow mode (only valid when used together with “pcm”, “flc” or “mp3”).
In flow mode, a continuous flow of audio is sent to the player, enabling
gapless and crossfade. Note that sample rate and size *must* be set to a
specific value as the format of audio sent to the player must always be the
same. By default 44.1kHz / 16 bits will be used if not specified. Note as well
that in flow mode, metadata will not be displayed on the player, unless mp3 is
used, ICY metadata is enabled and your player supports it which so far is not
the case for Chromecast</span></i></p>

<p class=MsoNormal><span lang=EN-US style='font-size:11.0pt;color:black'>[Audio
codec parameters </span><span lang=EN-GB style='font-size:11.0pt;font-family:
Wingdings;color:black'>è</span><span lang=EN-GB style='font-size:11.0pt;
color:black'> </span><span lang=EN-US style='font-size:11.0pt;color:black'>Encode]</span></p>

<p class=MsoNormal style='margin-top:20.0pt;margin-right:0cm;margin-bottom:
0cm;margin-left:0cm'><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;force_aac&gt;0
| 1&lt;/force_aac&gt;</span></b><span lang=EN-GB style='font-size:11.0pt;
color:black'> <i>default = 1</i></span></p>

<p class=MsoNormal style='margin-top:5.0pt'><i><span lang=EN-US
style='font-size:11.0pt;color:black'>When the bridge received aac inside a mp4
container, they can be unwrapped locally so that only adts frames are sent to
the player</span></i><i><span lang=EN-GB style='font-size:11.0pt;color:black'>.
This is usually to needed and <u>only applies to passthrough mode</u>.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>0 :
don’t force unwrapping</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>1:
force unwrapping</span></i></p>

<p class=MsoNormal><span lang=EN-US style='font-size:11.0pt;color:black'>[Audio
codec parameters </span><span lang=EN-GB style='font-size:11.0pt;font-family:
Wingdings;color:black'>è</span><span lang=EN-GB style='font-size:11.0pt;
color:black'> Force AAC</span><span lang=EN-US style='font-size:11.0pt;
color:black'>]</span></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;sample_rate&gt;[32000
| 44100 | 48000 | 88200 | 96000 | 176400 | 192000]&lt;/sample_rate&gt;</span></b><span
lang=EN-GB style='font-size:11.0pt;color:black'> <i>default = 96000</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>This
is the maximum sample rate accepted by the CC player that will be reported to
LMS. If a track is encoded at a higher rate, LMS will apply resampling rules,
according to its configuration. Not that this is not the sample rate used by
the bridge in full processing mode, this is just what is reported to LMS so
that it can downsample tracks above it.</span></i></p>

<p class=MsoNormal><span lang=EN-US style='font-size:11.0pt;color:black'>[Audio
codec parameters </span><span lang=EN-GB style='font-size:11.0pt;font-family:
Wingdings;color:black'>è</span><span lang=EN-US style='font-size:11.0pt;
color:black'> Max Sample Rate]</span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;<b>&lt;flac_header&gt;[0
| 1 | 2]&lt;/flac_header&gt;</b> <i>default = 1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>When
repositioning flac streams, LMS re-generates a file starting from the new
position but does not insert a proper header . Such header is required by some
players and it contains information like total number of samples in the file
and a checksum of the decoded audio data. The bridge cannot know these values
but the flac standard specifies that they should then be set to 0.So far, all
CC players work with default value, so there is no reason to tweak that.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>0 :
no header re-inserted</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>1:
header re-inserted with 0 for total number of sample and checksum</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>2:
header re-inserted with 2^32-1 for total number of samples and 0xaa (170) 16
times for checksum</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;<b>&lt;send_metadata&gt;[0
| 1]&lt;/send_metadata&gt;</b> <i>default = 1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>If
you do not want to see metadata (Artist, Album name etc.) on your player, or if
you have a login and password for the LMS CLI interface, set this to 0.&nbsp; <u><span
style='background:yellow'>Disabling this impacts badly the handling of pcm</span></u></span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&nbsp;&lt;send_coverart&gt;[0
| 1]&lt;/send_coverart&gt;</span></b><span lang=EN-GB style='font-size:11.0pt;
color:black'> <i>default = 1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>If
you do not want to see coverart on your player, or if you have a login and
password for the LMS CLI interface, set this to 0.&nbsp;</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;auto_play&gt;[0
| 1]&lt;/auto_play&gt;</span></b><span lang=EN-GB style='font-size:11.0pt;
color:black'> <i>default = 0</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Set
to 1 if you want the player to auto start playing on power on. Seems that this
feature is broken in LMS, so this is a workaround. </span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;/common&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>This
is the beginning of the sections that describes each device. There must be one
&lt;device&gt; section for each Chromecast player. Any parameter set in the
&lt;common&gt; can be repeated here, to override the defaults.</span></i></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>first
device …</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;device&gt;</span></b></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;<b>udn&gt;uuid:</b><i>RINCON_000E58FD8A4A01400</i><b>&lt;/udn&gt;</b></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>!!!
DO NOT EDIT THIS !!!&nbsp; It is the Chromecast device unique identifier for
that player – this is discovered automatically. The example is is for a
Chormcast v1 and a Chromecast Audio player.</span></i></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;<b>friendly_name&gt;</b>Chromecast6363&lt;<b>friendly_name&gt;</b></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>!!!
DO NOT EDIT THIS !!!&nbsp; It is the CC device name set by player – this is
discovered automatically. The example is for a CCA player.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;name&gt;[string]&lt;/name&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>The
name of the player as seen in LMS – can be set to whatever you want, from the
LMS web interface or from the plugin’s settings. Defaults to the Chromecast
built-in name.</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;mac&gt;[xx:xx:xx:xx:xx:xx]&lt;/mac&gt;</span></b></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>The
mac address of the player, note that <u>all players must have unique mac for
LMS to work properly. </u>If this parameter is omitted, the bridge will try to
discover the true physical address and replace the first 2 bytes with ‘cc’(this
is needed to make sure mac is unique across different bridge plugins). If it
cannot be discovered, then a random unique value will be generated, again with
the first 2 bytes set to ‘cc’. When creating a group, the mac address returned
for the group is the group leader, which creates a conflict. This is detected
and the final mac is the group leader’s address plus 1</span></i></p>

<p class=MsoNormal><b><span lang=EN-GB style='font-size:11.0pt;color:black'>&lt;enabled&gt;[0
| 1]&lt;/enabled&gt;</span></b><span lang=EN-GB style='font-size:11.0pt;
color:black'> <i>default = 1</i></span></p>

<p class=MsoNormal><i><span lang=EN-GB style='font-size:11.0pt;color:black'>Set
to 1 to allow the Chromecast player to be managed be the bridge. An LMS device
will be created for each player whose mode is above 0. Set to 0 to ignore the
player.&nbsp; It may be better to keep a list of all known players in the
configuration and disable those you don't want to use, so that you have a list
of the uuids should you ever need them.</span></i></p>

<p class=MsoNormal><b><span style='font-size:11.0pt;color:black'>&lt;/device&gt;</span></b></p>

<p class=MsoNormal><i><span style='font-size:11.0pt;color:black'>next device …</span></i></p>

<p class=MsoNormal><b><span style='font-size:11.0pt;color:black'>&lt;device&gt;</span></b></p>

<p class=MsoNormal><i><span style='font-size:11.0pt;color:black'>…</span></i></p>

<p class=MsoNormal><b><span style='font-size:11.0pt;color:black'>&lt;/device&gt;</span></b></p>

<p class=MsoNormal><b><span lang=EN-US style='font-size:11.0pt;color:black'>&lt;/squeeze2cast&gt;</span></b></p>

<p class=MsoNormal style='margin-bottom:0cm'>&nbsp;</p>

</div>

</body>

</html>
